name: main

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  qa:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    runs-on: ubuntu-latest
    steps:

      - name: Install bats
        run: |
          git clone https://github.com/sstephenson/bats.git
          cd bats
          ./install.sh $HOME/.local

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.7

      - name: Setup venv for caching
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Run linting and tests
        run: ./ci.sh

  build:
    needs: qa
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.7

      - name: Setup venv for caching
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Build package
        run: poetry build

      - name: Publish package
        run: poetry publish --repository publish
        env:
          POETRY_REPOSITORIES_PUBLISH_URL: https://test.pypi.org/legacy/
          POETRY_PYPI_TOKEN_PUBLISH: ${{ secrets.PYPI_TEST_API_TOKEN }}